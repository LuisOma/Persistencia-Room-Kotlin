apply plugin: 'com.android.application'
apply from: 'configuration.gradle'
apply plugin: 'jacoco-android'

// Versi√≥n de Jacoco, se recomienda para evitar conflictos entre componentes
jacoco {
        toolVersion = jacocoCoreVersion
}

// Formato de reporte jacoco, se necesita xml para Sonarqube
jacocoAndroidUnitTestReport {
        csv.enabled false
        html.enabled false
        xml.enabled true
}

sonarqube {
        properties {
                property "sonar.projectKey", "mx.com.persistenciaroom"
                property "sonar.projectName", "PersistenciaRoom"
                property "sonar.projectVersion", "1.0"
                property "sonar.host.url", sonarHost
                property "sonar.login", sonarLogin
                property "sonar.password", sonarPassword
                property "sonar.sources", "src/main/java"
                property "sonar.binaries", "build/intermediates/classes/debug"
                property "sonar.java.binaries", "build/intermediates/classes/debug"
                property "sonar.tests", "src/test/java, src/androidTest/java"
                property "sonar.java.test.binaries", "build/intermediates/classes/debug"
                def unit = fileTree(dir: project.projectDir, includes: ['**/*.exec']).files;
                def ui = fileTree(dir: project.projectDir, includes: ['**/*.ec']).files;
                unit.addAll(ui);
                def files = unit.join(", ");
                property "sonar.jacoco.reportPaths", files
                property "sonar.java.coveragePlugin", "jacoco"
                property "sonar.junit.reportsPath", "build/test-results/testDebugUnitTest"
                property "sonar.android.lint.report", "build/reports/lint-results.xml"
        }
}
